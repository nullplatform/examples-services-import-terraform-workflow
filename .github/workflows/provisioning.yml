name: Service Provisioning

on:
  workflow_dispatch:
    inputs:
      context:
        type: string
        description: nullplatform service lifecycle workflow context
        required: true

permissions:
  id-token: write
  contents: read
  packages: read
  actions: write

jobs:
  process-notification:
    runs-on: ubuntu-latest
    outputs:
      formatted_input: ${{ steps.parse-notification.outputs.formatted_input }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Parse Notification
        id: parse-notification
        env:
          NOTIFICATION_PAYLOAD: ${{ inputs.context }}
        run: |
          echo "Received Notification with Payload"
          echo "$NOTIFICATION_PAYLOAD"
          FORMATTED_INPUT=$(echo "$NOTIFICATION_PAYLOAD" | echo $NOTIFICATION_PAYLOAD | jq -c '(.notification.service.dimensions) * (.notification.service.attributes) * (.notification.link?.attributes // {}) * (.notification.parameters)')
          echo "formatted_input=${FORMATTED_INPUT}" >> $GITHUB_OUTPUT

  worker:
    needs: process-notification
    uses: nullplatform/examples-services-import-terraform-workflow/.github/workflows/worker.yml@main
    with:
      input: ${{ needs.process-notification.outputs.formatted_input }}

  update-status:
    needs: worker
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Update Entity Status
        env:
          NULLPLATFORM_API_KEY: ${{ secrets.NULLPLATFORM_API_KEY }}
        run: |
          STATUS=${{ contains(fromJSON('["failure", "cancelled"]'), needs.worker.result) && 'failed' || 'success' }}

          echo "Workcall status is $STATUS"
